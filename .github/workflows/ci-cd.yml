name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Run Go tests
      working-directory: ./go-service
      run: |
        go mod download
        go test ./tests/...
        go build ./cmd/ingester
        go build ./cmd/api
    
    - name: Set up Python for DBT
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    # - name: Test DBT
    #   working-directory: ./dbt
    #   run: |
    #     pip install dbt-bigquery==1.6.0
    #     dbt compile

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
    
    - name: Configure Docker
      run: gcloud auth configure-docker
    
    - name: Build and Deploy Go Service
      working-directory: ./go-service
      run: |
        docker build -t gcr.io/$PROJECT_ID/data-ingestion:$GITHUB_SHA .
        docker push gcr.io/$PROJECT_ID/data-ingestion:$GITHUB_SHA
        
        gcloud run deploy data-ingestion-api \
          --image=gcr.io/$PROJECT_ID/data-ingestion:$GITHUB_SHA \
          --platform=managed \
          --region=$REGION \
          --allow-unauthenticated \
          --set-env-vars="GCP_PROJECT_ID=$PROJECT_ID,DATASET=data_ingestion,PROD_TABLE=processed_logs,PORT=8080" \
          --command="./api"
        
        gcloud run deploy data-ingestion-ingester \
          --image=gcr.io/$PROJECT_ID/data-ingestion:$GITHUB_SHA \
          --platform=managed \
          --region=$REGION \
          --no-allow-unauthenticated \
          --set-env-vars="API_ENDPOINT=${{ secrets.API_ENDPOINT }},GCP_PROJECT_ID=$PROJECT_ID,DATASET=data_ingestion,RAW_TABLE=raw_logs,SOURCE=placeholder_api,FETCH_INTERVAL=5m" \
          --command="./ingester"
    
    - name: Build and Deploy DBT
      working-directory: ./dbt
      run: |
        docker build -t gcr.io/$PROJECT_ID/dbt-transform:$GITHUB_SHA .
        docker push gcr.io/$PROJECT_ID/dbt-transform:$GITHUB_SHA
        
        gcloud run jobs replace dbt-transform \
          --image=gcr.io/$PROJECT_ID/dbt-transform:$GITHUB_SHA \
          --region=$REGION \
          --set-env-vars="GCP_PROJECT_ID=$PROJECT_ID,DATASET=data_ingestion" \
          --max-retries=3 || \
        gcloud run jobs create dbt-transform \
          --image=gcr.io/$PROJECT_ID/dbt-transform:$GITHUB_SHA \
          --region=$REGION \
          --set-env-vars="GCP_PROJECT_ID=$PROJECT_ID,DATASET=data_ingestion" \
          --max-retries=3
        
        gcloud run jobs execute dbt-transform --region=$REGION
